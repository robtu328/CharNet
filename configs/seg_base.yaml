import:
    - 'configs/base.yaml'
package:
    - 'charnet.modeling.model'
    - 'data.data_loader'
    - 'data.image_dataset'
    - 'data.synth_dataset'
define:
  - name: train_data
    class: ImageDataset
    data_dir:
        - '/home/robtu/Github/data/icdar2015'
        #- './datasets/icdar2015/'
    data_list:
        - '/home/robtu/Github/data/icdar2015/train_list.txt'
        #- './datasets/icdar2015/train_list.txt'
    processes:
        - class: AugmentDetectionData
          augmenter_args:
              - ['Fliplr', 0.5]
              - {'cls': 'Affine', 'rotate': [-10, 10]}
              - ['Resize', [0.5, 3.0]]
          only_resize: False
          keep_ratio: False
        - class: RandomCropData
          #size: [640, 640]
          size: [2560, 1280]
          max_tries: 10
        - class: MakeICDARData
        - class: MakeSegDetectionData
        - class: MakeBorderMap
        - class: NormalizeImage
        - class: FilterKeys
          superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training']


  - name: train_data_synth
    class: SynthDataset
    data_dir:
        - '/home/robtu/Github/data/SynthText/SynthText/'
        #- './datasets/icdar2015/'
    mat_list:
        - '/home/robtu/Github/data/SynthText/SynthText/gtsub.mat'
        #- './datasets/icdar2015/train_list.txt'
    processes:
        - class: AugmentDetectionData
          augmenter_args:
              - ['Fliplr', 0.5]
              #- {'cls': 'Affine', 'rotate': [0, 0]}
              - {'cls': 'Affine', 'rotate': [-5, 5]}
              # Resize each image’s height to 50-75% of its original size and width to either 16px or 32px or 64px:
              # aug = iaa.Resize({"height": (0.5, 0.75), "width": [16, 32, 64]})
              - ['Resize', [640, 640]]
              #- ['Resize', [0.5, 3.0]]
          only_resize: False
          #keep_ratio: False
          keep_ratio: True
        - class: RandomCropData
          size: [640, 640]
          #size: [1280, 640]
          max_tries: 10
        - class: MakeICDARData
#        - class: MakeSegDetectionData
        - class: MakeBorderMap
          charindx: 'datasets/ICDAR2015/test/char_dict.txt'  
          yamlfile: 'datasets/ICDAR2015/test/rect_bbox.yaml'
        - class: NormalizeImage
          norm_type: 'lib'
        - class: FilterKeys
#          superfluous: [ 'filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char']
          #superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training', 'polygons_char', 'ignore_tags_char', 'thresh_mask_char', 'thresh_map_char', 'thresh_mask', 'thresh_map', 'mask', 'gt_char', 'mask_char', 'gt', 'ignore_tags_char', 'polygons_char']
          superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char', 'ignore_tags_char']
    mode: "train"
    
    #snumber: 1000
    #snumber: 10000

  - name: train_data_basket
    class: SynthDataset
    data_dir:
        - '/home/robtu/Github/data/basketball/metadata/'
        #- './datasets/icdar2015/'
    mat_list:
        - '/home/robtu/Github/data/basketball/gt_basket.mat'
        #- './datasets/icdar2015/train_list.txt'
    processes:
        - class: AugmentDetectionData
          augmenter_args:
              #- ['Fliplr', 0.5]
              #- {'cls': 'Affine', 'rotate': [0, 0]}
              - {'cls': 'Affine', 'rotate': [-5, 5]}
              # Resize each image’s height to 50-75% of its original size and width to either 16px or 32px or 64px:
              # aug = iaa.Resize({"height": (0.5, 0.75), "width": [16, 32, 64]})
              - ['Resize', {'width': 1024, 'height': 512}]
              #- ['Resize', [720, 1280]]
              #- ['Resize', [1, 1.5]]
          only_resize: False
          keep_ratio: False
          #keep_ratio: True
        - class: RandomCropData
          #size: [640, 640]
          size: [1024, 512]
          max_tries: 10
        - class: MakeICDARData
#        - class: MakeSegDetectionData
        - class: MakeBorderMap
          charindx: 'datasets/ICDAR2015/test/char_dict.txt'  
          yamlfile: 'datasets/ICDAR2015/test/rect_bbox.yaml'
        - class: NormalizeImage
          norm_type: 'lib'
        - class: FilterKeys
#          superfluous: [ 'filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char']
          #superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training', 'polygons_char', 'ignore_tags_char', 'thresh_mask_char', 'thresh_map_char', 'thresh_mask', 'thresh_map', 'mask', 'gt_char', 'mask_char', 'gt', 'ignore_tags_char', 'polygons_char']
          superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char', 'ignore_tags_char']
          #superfluous: ['filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char', 'ignore_tags_char']
    mode: "train"
    #seqList: True
    #snumber: 1000
    #snumber: 10000


  - name: valid_data_basket
    class: SynthDataset
    data_dir:
        - '/home/robtu/Github/data/basketball/metadata/'
    mat_list:
        - '/home/robtu/Github/data/basketball/gt_basket.mat'
    processes:
        - class: AugmentDetectionData
          augmenter_args:
              - ['Resize', {'width': 1024, 'height': 512}]
          only_resize: False
          keep_ratio: False
          #keep_ratio: True
        - class: RandomCropData
          size: [1024, 512]
          max_tries: 10
        - class: MakeICDARData
        - class: MakeBorderMap
          charindx: 'datasets/ICDAR2015/test/char_dict.txt'  
          yamlfile: 'datasets/ICDAR2015/test/rect_bbox.yaml'
        - class: NormalizeImage
          norm_type: 'lib'
        - class: FilterKeys
          superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char', 'ignore_tags_char']
          #superfluous: ['filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char', 'ignore_tags_char']
    mode: "valid"
    seqList: True
    #snumber: 1000
    #snumber: 10000




  - name: train_data_game
    class: SynthDataset
    data_dir:
        - '/home/robtu/Github/data/games/metadata/'
        #- './datasets/icdar2015/'
    mat_list:
        - '/home/robtu/Github/data/games/gt_game.mat'
        #- './datasets/icdar2015/train_list.txt'
    processes:
        - class: AugmentDetectionData
          augmenter_args:
              #- ['Fliplr', 0.5]
              #- {'cls': 'Affine', 'rotate': [0, 0]}
              - {'cls': 'Affine', 'rotate': [-5, 5]}
              # Resize each image’s height to 50-75% of its original size and width to either 16px or 32px or 64px:
              # aug = iaa.Resize({"height": (0.5, 0.75), "width": [16, 32, 64]})
              - ['Resize', {'width': 1024, 'height': 512}]
              #- ['Resize', [720, 1280]]
              #- ['Resize', [1, 1.5]]
          only_resize: False
          keep_ratio: False
          #keep_ratio: True
        - class: RandomCropData
          #size: [640, 640]
          size: [1024, 512]
          max_tries: 10
        - class: MakeICDARData
#        - class: MakeSegDetectionData
        - class: MakeBorderMap
          charindx: 'datasets/ICDAR2015/test/char_dict.txt'  
          yamlfile: 'datasets/ICDAR2015/test/rect_bbox.yaml'
        - class: NormalizeImage
          norm_type: 'lib'
        - class: FilterKeys
#          superfluous: [ 'filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char']
          #superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training', 'polygons_char', 'ignore_tags_char', 'thresh_mask_char', 'thresh_map_char', 'thresh_mask', 'thresh_map', 'mask', 'gt_char', 'mask_char', 'gt', 'ignore_tags_char', 'polygons_char']
          superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char', 'ignore_tags_char']
          #superfluous: ['filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char', 'ignore_tags_char']
    mode: "train"
    seqList: True
    #snumber: 1000
    #snumber: 10000


  - name: valid_data_game
    class: SynthDataset
    data_dir:
        - '/home/robtu/Github/data/games/metadata/'
    mat_list:
        - '/home/robtu/Github/data/games/gt_game.mat'
    processes:
        - class: AugmentDetectionData
          augmenter_args:
              - ['Resize', {'width': 1024, 'height': 512}]
          only_resize: False
          keep_ratio: False
          #keep_ratio: True
        - class: RandomCropData
          size: [1024, 512]
          max_tries: 10
        - class: MakeICDARData
        - class: MakeBorderMap
          charindx: 'datasets/ICDAR2015/test/char_dict.txt'  
          yamlfile: 'datasets/ICDAR2015/test/rect_bbox.yaml'
        - class: NormalizeImage
          norm_type: 'lib'
        - class: FilterKeys
          superfluous: ['polygons', 'filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char', 'ignore_tags_char']
          #superfluous: ['filename', 'shape', 'ignore_tags', 'is_training',  'ignore_tags_char', 'ignore_tags_char']
    mode: "valid"
    seqList: True
    #snumber: 1000
    #snumber: 10000










  - name: validate_data
    class: ImageDataset
    data_dir:
        - './datasets/icdar2015/'
    data_list:
        - './datasets/icdar2015/test_list.txt'
    processes:
        - class: AugmentDetectionData
          augmenter_args:
              # - ['Resize', {'width': 1280, 'height': 736}]
              - ['Resize', {'width': 2048, 'height': 1152}]
          only_resize: True
          keep_ratio: True
        - class: MakeICDARData
        - class: MakeSegDetectionData
        - class: NormalizeImage

  - name: 'Experiment'
    train: 
        class: TrainSettings
        data_loader: 
            class: DataLoader
            dataset: ^train_data
            batch_size: 16
            num_workers: 16
        epochs: 100
    train_synth: 
        class: TrainSettings
        data_loader: 
            class: DataLoader
            dataset: ^train_data_synth
            batch_size: 2
            num_workers: 2
        epochs: 100
    train_basket: 
        class: TrainSettings
        data_loader: 
            class: DataLoader
            dataset: ^train_data_basket
            batch_size: 2
            num_workers: 2
        epochs: 60    
    valid_basket: 
        class: TrainSettings
        data_loader: 
            class: DataLoader
            dataset: ^valid_data_basket
            batch_size: 2
            num_workers: 2
        epochs: 1   
    train_game: 
        class: TrainSettings
        data_loader: 
            class: DataLoader
            dataset: ^train_data_game
            batch_size: 2
            num_workers: 2
        epochs: 60    
    valid_game: 
        class: TrainSettings
        data_loader: 
            class: DataLoader
            dataset: ^valid_data_game
            batch_size: 2
            num_workers: 2
        epochs: 1   
        
        
        
        
        
        
        
